@{
    ViewBag.Title = "Contact";
}


<div id="gallery" class="content">
    <div id="controls" class="controls"></div>
    <div class="slideshow-container">
        <div id="loading" class="loader"></div>
        <div id="slideshow" class="slideshow" style="width:304px;height:228px;"></div>
    </div>
    <div id="caption" class="caption-container"></div>
</div>

<div id="appImages">
    <script id="images" type="text/html">
        <div id="thumbs" class="navigation">
            <ul class="thumbs noscript">
                <li class="imgdata">

                    <% _.each(images, function (image) { %>

                        <a class="thumb" href="../Images/<%= image.ApartmentName %>/<%= image.ImageName %>" title="<%= image.ImageName %>">
                            <img src="../Images/<%= image.ApartmentName %>/<%= image.ImageName %>" width="300" height="220" alt="<%= image.ImageName %>" title="<%= image.ImageName %>" />
                        </a>

                    <% }); %>

                </li>
            </ul>
        </div>
    </script>
</div>

    <div id="appDetails">
        <script id="latitude" type="text/html">
            <p>Name: <%= Name %></p>
            <p>City: <%= City %></p>
            <p>Address: <%= Address %></p>
            <p>Price: <%= Price %></p>
        </script>
    </div>

    <script src="~/Scripts/test.js"></script>

    <script type="text/javascript">

        var details = new ApartmentDetails({ id: '@ViewContext.RouteData.Values["id"]' });

        var view2 = new appDetails({ model: details, el: $('#appDetails')[0] });

        this.details.fetch({
            success: function () {
                view2.render();
            }
        });
        var images = new ImagesCollection([], { id: '@ViewContext.RouteData.Values["id"]' });

        var view1 = new appImagesView({ model: images, el: $('#appImages')[0] });

        images.fetch({

            reset: function () {
                view1.render();
            },

            success: function () {
                view1.render();
            }
        });

    </script>

<script type="text/javascript">



    $(document).ajaxComplete(function () {

        // We only want these styles applied when javascript is enabled
        $('div.navigation').css({ 'float': 'left' });
        $('div.content').css('display', 'block');

        // Initially set opacity on thumbs and add
        // additional styling for hover effect on thumbs
        var onMouseOutOpacity = 0.67;
        $('#thumbs ul.thumbs li').opacityrollover({
            mouseOutOpacity: onMouseOutOpacity,
            mouseOverOpacity: 1.0,
            fadeSpeed: 'fast',
            exemptionSelector: '.selected'
        });

        // Initialize Advanced Galleriffic Gallery
        var gallery = $('#thumbs').galleriffic({
            delay: 4000,
            numThumbs: 15,
            preloadAhead: 10,
            enableTopPager: true,
            enableBottomPager: true,
            maxPagesToShow: 7,
            imageContainerSel: '#slideshow',
            controlsContainerSel: '#controls',
            captionContainerSel: '#caption',
            loadingContainerSel: '#loading',
            renderSSControls: true,
            renderNavControls: true,
            playLinkText: 'Play Slideshow',
            pauseLinkText: 'Pause Slideshow',
            prevLinkText: '&lsaquo; Previous Photo',
            nextLinkText: 'Next Photo &rsaquo;',
            nextPageLinkText: 'Next &rsaquo;',
            prevPageLinkText: '&lsaquo; Prev',
            enableHistory: false,
            autoStart: false,
            syncTransitions: true,
            defaultTransitionDuration: 900,
            onSlideChange: function (prevIndex, nextIndex) {
                // 'this' refers to the gallery, which is an extension of $('#thumbs')
                this.find('ul.thumbs').children()
                        .eq(prevIndex).fadeTo('fast', onMouseOutOpacity).end()
                        .eq(nextIndex).fadeTo('fast', 1.0);
            },
            onPageTransitionOut: function (callback) {
                this.fadeTo('fast', 0.0, callback);
            },
            onPageTransitionIn: function () {
                this.fadeTo('fast', 1.0);
            }
        });


    });




</script>

